#!/bin/bash

set -o nounset

# -- global variables ----------------------------------------------------------
host="musicforprogramming.net"
content_host="datashat.net"
index_page=""
menu=false

# -- functions -----------------------------------------------------------------
fetch_index_page() {
    index_page=$(wget -q -O - "http://$host/" 2> /dev/null) \
        || ( echo >&2 "ERROR: failed to fetch index page" && return 1 )
}

get_djs() {
    grep -Po '[0-9]+: Compiled by (\w+ ?)+' <<< "$index_page" \
            | uniq | grep -Po '(?<=by )(\w+ ?)+' \
        || ( echo >&2 "ERROR: failed to get djs" && return 1 )
}

play() {
    echo "--> playing episode $1 by $2"
    dj=$(tr ' ' '_' <<< "$2" | tr '[A-Z]' '[a-z]')
    filename="music_for_programming_$1-$dj.mp3"
    mpg123 -q "http://$content_host/$filename" > /dev/null 2>&1 &
}

usage() {
    echo "usage: progmusic [-m]
        -m show episode menu"
}

show_menu() {
    IFS=$'\n'
    echo "==[ EPISODES ]========================"
    select dj in $djs
    do
        if [[ -n "$dj" ]]
        then
            play "$REPLY" "$dj"
            break
        else
            echo "invalid option"
        fi
    done
}

random_episode() {
    no_of_episodes=$(wc -l <<< "$djs")
    episode_no=$(( $RANDOM % $no_of_episodes + 1 ))
    dj=$(sed -n ${episode_no}p <<< "$djs")
    play "$episode_no" "$dj"
}

# -- initialize ----------------------------------------------------------------
hash mpg123 2>&- || ( echo >&2 "ERROR: mpg123 not installed, exiting.." && exit 1 )

while getopts "m" opt
do
    case $opt in
        m) menu=true ;;
        *) usage && exit 1 ;;
    esac
done

# -- main ----------------------------------------------------------------------
echo -e "===[  CLI for http://musicforprogramming.net/  ]===
     Credits Datassette http://datassette.net/    \n"

fetch_index_page
djs=$(get_djs)
$menu && show_menu || random_episode
