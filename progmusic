#!/bin/bash

set -o nounset

# -- global variables ----------------------------------------------------------
host="musicforprogramming.net"
content_host="datashat.net"
menu=false
bg=false
pipe_path="/tmp/progmusicpipe"

# -- pipe required to workaround no https in mpg123 ----------------------------

mkfifo $pipe_path

# -- functions -----------------------------------------------------------------

function cleanup {
    rm  -r $pipe_path
}
trap cleanup EXIT

get_djs() {
    wget -q -O - "http://$host/latest" 2> /dev/null \
	| grep -oE "([0-9]+:\s[^\<\"]+)" \
	| sort \
	| uniq
}

# 	

play() {
    green="\033[1;32m"
    dj=$(echo $2 | grep -oE ':\s(.+)$' | cut -c3-)
    echo -e "$green-->$normal playing episode $1 by $dj"
    filepart=$(tr ' ' '_' <<< "$dj" | tr '[A-Z]' '[a-z]' | sed 's/+/and/g' | sed 's/\./_/g' | sed 's/__/_/g')
    filename="music_for_programming_$1-$filepart.mp3"
    url="https://$content_host/$filename"
    if [[ "$bg" == "true" ]]
    then
	(curl -sL $url -o pipe & mpg123 pipe > /dev/null 2>&1) &
    else
	curl -sL $url -o pipe & mpg123 pipe > /dev/null 2>&1
    fi
}

usage() {
    echo "usage: progmusic [-mb]
        -m show episode menu
        -d run in background"
}

show_menu() {
    IFS=$'\n'
    echo "Choose episode:"
    select dj in $1
    do
        if [[ -n "$dj" ]]
        then
            play "$REPLY" "$dj"
            break
        else
            echo "invalid option"
        fi
    done
}

random_episode() {
    no_of_episodes=$(wc -l <<< "$1")
    episode_no=$(( $RANDOM % $no_of_episodes))
    episode_line=$(( $episode_no + 1 ))
    dj=$(sed -n ${episode_line}p <<< "$1")
    play "$episode_line" "$dj"
}

assert_in_path() {
    hash $1 2>&- || { echo >&2 "ERROR: $1 not installed, exiting.." && exit 1; }
}

# -- initialize ----------------------------------------------------------------
assert_in_path mpg123 && assert_in_path wget

while getopts "md" opt
do
    case $opt in
	d) bg=true ;;
        m) menu=true ;;
        *) usage && exit 1 ;;
    esac
done

# -- main ----------------------------------------------------------------------
bold="\033[1m"
normal="\033[0m"

echo -e "$bold===[$normal  CLI for http://musicforprogramming.net/ $bold]===
    $normal Credits Datassette http://datassette.net/\n"

if djs=$(get_djs)
then
    $menu && show_menu "$djs" || random_episode "$djs"
else
    echo "ERROR: failed to get episodes"
fi
