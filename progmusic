#!/bin/bash

set -o nounset

# -- global variables ----------------------------------------------------------
host="musicforprogramming.net"
content_host="datashat.net"
index_page=""

# -- functions -----------------------------------------------------------------
fetch_index_page() {
    index_page=$(wget -q -O - "http://$host/" 2> /dev/null) \
        || ( echo >&2 "ERROR: failed to fetch index page" && return 1 )
}

get_episodes() {
    grep -Po '[0-9]+: Compiled by (\w+ ?)+' <<< "$index_page" \
            | uniq | grep -Po '(?<=by )(\w+ ?)+' \
        || ( echo >&2 "ERROR: failed to get dj's" && return 1 )
}

play() {
    name=$(tr ' ' '_' <<< "$2" | tr '[A-Z]' '[a-z]')
    filename="music_for_programming_$1-$name.mp3"
    mpg123 -q "http://$content_host/$filename" > /dev/null 2>&1 &
}

usage() {
    echo "usage: progmusic [-r]
        -m show episode menu"
}

# -- initialize ----------------------------------------------------------------
hash mpg123 2>&- || ( echo >&2 "ERROR: mpg123 not installed, exiting.." && exit 1 )

# -- main ----------------------------------------------------------------------

# 1. ackowledgemet
echo -e "===[  CLI for http://musicforprogramming.net/  ]===
     Credits Datassette http://datassette.net/    \n"

# 2. fetch index page
fetch_index_page

# 3. get djs
IFS=$'\n'
djs=$(get_episodes)
echo "==[ EPISODES ]========================"
select dj in $djs
do
    echo "--> playing $REPLY $dj"
    play "$REPLY" "$dj"
    break
    # case "$dj" in
    #     "$djs")
    #         echo "--> playing $REPLY $dj"
    #         ;;
    #     *)
    #         echo "invalid option"
    # esac
done
