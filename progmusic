#!/bin/bash

set -o nounset

# -- global variables ----------------------------------------------------------
host="musicforprogramming.net"
content_path="/content/"
index_page=""

# -- functions -----------------------------------------------------------------
fetch_index_page() {
    if ! index_page=$(wget -q -O - "http://$host/" 2> /dev/null)
    then
        echo "ERROR: failed to fetch index page" && return 1
    fi
}

get_episodes() {
    if ! grep -Po '[0-9]+: Compiled by (\w+ ?)+' <<< "$index_page" | uniq | grep -Po '(?<=by )(\w+ ?)+'
    then
        echo "ERROR: failed to get dj's" && return 1
    fi
}

play() {
    number="$1"
    name=$(tr ' ' '_' <<< "$2"|tr '[A-Z]' '[a-z]')

    # one of the episodes are on a different host..
    [[ "$number" = "4" ]] && host="datassette.net"

    ep_file_name_prefix="music_for_programming_$number-"
    ep_file_name_suffix=".mp3"

    mpg123 -q "http://$host$content_path$ep_file_name_prefix$name$ep_file_name_suffix"
}

usage() {
    echo "usage: progmusic [-r]
        -r random episode"
}

# -- initialize ----------------------------------------------------------------
# check if mpg123 is installed, otherwise exit
hash mpg123 2>&- || { echo >&2 "ERROR: mpg123 not installed, exiting.."; exit 1; }

# -- main ----------------------------------------------------------------------

# 1. ackowledgemet
echo -e "==[  CLI for http://musicforprogramming.net/  ]==
    Credits Datassette http://datassette.net/    \n"

# 2. fetch index page
fetch_index_page

# 3. get djs
IFS=$'\n'
djs=$(get_episodes)
echo "==[ EPISODES ]========================"
select dj in $djs
do
    echo "--> playing $REPLY $dj"
    play "$REPLY" "$dj"
    break
    # case "$dj" in
    #     "$djs")
    #         echo "--> playing $REPLY $dj"
    #         ;;
    #     *)
    #         echo "invalid option"
    # esac
done
